mppnccombine(1)
===============

NAME
----
mppnccombine - combine FMS distributed files

SYNOPSIS
--------
[verse]
mppnccombine [options] output.nc [input ...]

DESCRIPTION
-----------
mppnccombine joins together an arbitrary number of netCDF input files, each
containing parts of a decomposed domain, into a unified netCDF output file.
An output file must be specified and it is assumed to be the first filename
argument.  If the output file already exists, then it will not be modified
unless the option is chosen to append to it.  If no input files are specified
then their names will be based on the name of the output file plus the default
numeric extension ".0000", which will increment by 1.  There is an option for
starting the filename extensions with an arbitrary number instead of 0.  There
is an option for specifying an end to the range of filename extension numbers;
files within the range do not have to be consecutively numbered.  If input
files are specified then names will be used verbatim.

A value of 0 is returned if execution completed successfully; a value of 1
otherwise.

OPTIONS
-------
*-v*::
Print some progress information.

*-V*::
Print version information.

*-M*::
Print memory usage statistics.

*-f*::
Force combine to happen even if input files are missing.

*-a*::
Append to an existing netCDF file (not heavily tested...).

*-r*::
Remove the ".####" decomposed files after a successful run.

*-n #*::
Input filename extensions start with number #### instead of 0000.

*-k #*::
Blocking factor. k records are read from an input file at a time.
Valid values are between 0 and 100. For a given input, the maximum
permissible value for k is min(total number of records, 100).
Setting k to zero will set the blocking factor to this maximum
permissible value. Setting k to a value higher than this value,
will make the system implicitly set k to the highest permissible value.
A value of 1 for k disables blocking. This is the default behavior.
Blocking often improves performance, but increases the peak memory
footprint (by the blocking factor). Beware of running out of
available physical memory and causing swapping to disk due to
large blocking factors and/or large input datasets.
A value of 10 for k has worked well on many input datasets.
See -x for estimating memory usage for a given input set.

*-e #*::
Ending number #### of a specified range of input filename extensions.
Files within the range do not have to be consecutively numbered.

*-h #*::
Add a specified number of bytes of padding at the end of the header.

*-64*::
Create netCDF output files with the 64-bit offset format.

*-n4*::
Create netCDF output files in NETCDF4_CLASSIC mode (no v4 enhanced features).

*-d #*::
When in NETCDF4 mode, use deflation of level #.

*-s*::
When in NETCDF4 mode, use shuffle.

*-m*::
Initialize output variables with a "missing_value" from the variables
of the first input file instead of the default 0 value.

*-x*::
Print an estimate for peak memory resident size in (MB) and exit.
No output file will be created. Setting -x automatically sets
the blocking factor (-k) to 1. Any value set for -k on the
command-line will be ignored. To estimate memory usage for a
a different blocking factor, simply multiply the estimate by k.

SEE ALSO
--------
*mppncscatter*(1)

BUGS
----
Open bug reports at {package_bugreport}.

AUTHORS
-------
Hans Vahlenkamp

COPYRIGHT AND LICENSE
---------------------
Copyright {copyright_year} Geophysical Fluid Dynamics Laboratory

FRE-NCTools is free software: you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

FRE-NCTools is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
