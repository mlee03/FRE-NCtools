# This file is sourced by init.sh, *before* its initialization.

# Copyright (C) 2010-2024 Free Software Foundation, Inc.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Get the number of CPUs on the current system.
get_ncpu_()
{
    if sysctl -n hw.physicalcpu >/dev/null 2>&1
    then
        ncpu=$(sysctl -n hw.physicalcpu)
    elif nproc --all >/dev/null 2>&1
    then
        ncpu=$(nproc --all)
    elif grep -c ^processor /proc/cpuinfo >/dev/null 2>&1
    then
        ncpu=$(grep -c ^processor /proc/cpuinfo)
    else
        ncpu=1
    fi
}

# Mark the test as very expensive and skip it if the environment variable
# RUN_VERY_EXPENSIVE_TESTS is not set to yes.
very_expensive_()
{
  if test "$RUN_VERY_EXPENSIVE_TESTS" != yes; then
    skip_ 'very expensive: disabled by default
This test is very expensive, so it is disabled by default.
To run it anyway, rerun make check with the RUN_VERY_EXPENSIVE_TESTS
environment variable set to yes.  E.g.,

  env RUN_VERY_EXPENSIVE_TESTS=yes make check

or use the shortcut target of the toplevel Makefile,

  make check-very-expensive
'
  fi
}

# Mark the test as expensive and skip it if the environment variable
# RUN_EXPENSIVE_TESTS is not set to yes.
expensive_()
{
  if test "$RUN_EXPENSIVE_TESTS" != yes; then
    skip_ 'expensive: disabled by default
This test is relatively expensive, so it is disabled by default.
To run it anyway, rerun make check with the RUN_EXPENSIVE_TESTS
environment variable set to yes.  E.g.,

  env RUN_EXPENSIVE_TESTS=yes make check

or use the shortcut target of the toplevel Makefile,

  make check-expensive
'
  fi
}