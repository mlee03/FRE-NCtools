#!/bin/sh

# Copyright (C) 2024 Geophysical Fluid Dynamics Laboratory

# This file is part of the GFDL FRE NetCDF tools package (FRE-NCTools).

# FRE-NCtools is free software: you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# FRE-NCtools is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with FRE-NCTools.  If not, see
# <http://www.gnu.org/licenses/>.

if test "$VERBOSE" = yes
then
    set -x
fi

. "${srcdir=.}/init.sh"

# Create the four decomposed NetCDF files
ncgen -o decomp_ref.nc.0000 << EOF || framework_failure_ "failed to create decomp.nc.0000"
netcdf compress {
dimensions:
  grid_xt = 5 ;
  grid_yt = 5 ;
  time = UNLIMITED ; // (1 currently)
variables:
  double grid_xt(grid_xt) ;
    grid_xt:long_name = "T-cell longitude" ;
    grid_xt:units = "degrees_E" ;
    grid_xt:axis = "X" ;
    grid_xt:domain_decomposition = 1, 10, 1, 5 ;
  double grid_yt(grid_yt) ;
    grid_yt:long_name = "T-cell latitude" ;
    grid_yt:units = "degrees_N" ;
    grid_yt:axis = "Y" ;
    grid_yt:domain_decomposition = 1, 10, 1, 5 ;
  double time(time) ;
    time:long_name = "time" ;
    time:units = "days since 0001-01-01 00:00:00" ;
    time:axis = "T" ;
    time:calendar_type = "NOLEAP" ;
    time:calendar = "noleap" ;
  float var(grid_yt, grid_xt) ;
    var:long_name = "Decomposed variable" ;
    var:units = "m" ;
    var:missing_value = 1.e+20f ;
    var:_FillValue = 1.e+20f ;
    var:dummy_attribute = "just a dummy attribute" ;
// global attributed:
  :filename = "decomp_ref.nc.0000" ;
  :NumFilesInSet = 4 ;
  :dummy_global_att = "a global dummy attribute" ;
data:
  grid_xt = 0.0, 1.0, 2.0, 3.0, 4.0 ;
  grid_yt = 0.0, 1.0, 2.0, 3.0, 4.0 ;
  time = 0 ;
  var =
    0, 1, 2, 3, 4,
    10, 11, 12, 13, 14,
    20, 21, 22, 23, 24,
    30, 31, 32, 33, 34,
    40, 41, 42, 43, 44 ;
}
EOF

ncgen -o decomp_ref.nc.0001 << EOF || framework_failure_ "failed to crate decomp.nc.0001"
netcdf compress {
dimensions:
  grid_xt = 5 ;
  grid_yt = 5 ;
  time = UNLIMITED ; // (1 currently)
variables:
  double grid_xt(grid_xt) ;
    grid_xt:long_name = "T-cell longitude" ;
    grid_xt:units = "degrees_E" ;
    grid_xt:axis = "X" ;
    grid_xt:domain_decomposition = 1, 10, 6, 10 ;
  double grid_yt(grid_yt) ;
    grid_yt:long_name = "T-cell latitude" ;
    grid_yt:units = "degrees_N" ;
    grid_yt:axis = "Y" ;
    grid_yt:domain_decomposition = 1, 10, 1, 5 ;
  double time(time) ;
    time:long_name = "time" ;
    time:units = "days since 0001-01-01 00:00:00" ;
    time:axis = "T" ;
    time:calendar_type = "NOLEAP" ;
    time:calendar = "noleap" ;
  float var(grid_yt, grid_xt) ;
    var:long_name = "Decomposed variable" ;
    var:units = "m" ;
    var:missing_value = 1.e+20f ;
    var:_FillValue = 1.e+20f ;
    var:dummy_attribute = "just a dummy attribute" ;
// global attributed:
  :filename = "decomp_ref.nc.0001" ;
  :NumFilesInSet = 4 ;
  :dummy_global_att = "a global dummy attribute" ;
data:
  grid_xt = 5.0, 6.0, 7.0, 8.0, 9.0 ;
  grid_yt = 0.0, 1.0, 2.0, 3.0, 4.0 ;
  time = 0 ;
  var =
    5, 6, 7, 8, 9,
    15, 16, 17, 18, 19,
    25, 26, 27, 28, 29,
    35, 36, 37, 38, 39,
    45, 46, 47, 48, 49 ;
}
EOF

ncgen -o decomp_ref.nc.0002 << EOF || framework_failure_ "failed to create decomp.nc.0002"
netcdf compress {
dimensions:
  grid_xt = 5 ;
  grid_yt = 5 ;
  time = UNLIMITED ; // (1 currently)
variables:
  double grid_xt(grid_xt) ;
    grid_xt:long_name = "T-cell longitude" ;
    grid_xt:units = "degrees_E" ;
    grid_xt:axis = "X" ;
    grid_xt:domain_decomposition = 1, 10, 1, 5 ;
  double grid_yt(grid_yt) ;
    grid_yt:long_name = "T-cell latitude" ;
    grid_yt:units = "degrees_N" ;
    grid_yt:axis = "Y" ;
    grid_yt:domain_decomposition = 1, 10, 6, 10 ;
  double time(time) ;
    time:long_name = "time" ;
    time:units = "days since 0001-01-01 00:00:00" ;
    time:axis = "T" ;
    time:calendar_type = "NOLEAP" ;
    time:calendar = "noleap" ;
  float var(grid_yt, grid_xt) ;
    var:long_name = "Decomposed variable" ;
    var:units = "m" ;
    var:missing_value = 1.e+20f ;
    var:_FillValue = 1.e+20f ;
    var:dummy_attribute = "just a dummy attribute" ;
// global attributed:
  :filename = "decomp_ref.nc.0002" ;
  :NumFilesInSet = 4 ;
  :dummy_global_att = "a global dummy attribute" ;
data:
  grid_xt = 0.0, 1.0, 2.0, 3.0, 4.0 ;
  grid_yt = 5.0, 6.0, 7.0, 8.0, 9.0 ;
  time = 0 ;
  var =
    50, 51, 52, 53, 54,
    60, 61, 62, 63, 64,
    70, 71, 72, 73, 74,
    80, 81, 82, 83, 84,
    90, 91, 92, 93, 94 ;
}
EOF

ncgen -o decomp_ref.nc.0003 << EOF || framework_failure_ "failed to create decomp.nc.0003"
netcdf compress {
dimensions:
  grid_xt = 5 ;
  grid_yt = 5 ;
  time = UNLIMITED ; // (1 currently)
variables:
  double grid_xt(grid_xt) ;
    grid_xt:long_name = "T-cell longitude" ;
    grid_xt:units = "degrees_E" ;
    grid_xt:axis = "X" ;
    grid_xt:domain_decomposition = 1, 10, 6, 10 ;
  double grid_yt(grid_yt) ;
    grid_yt:long_name = "T-cell latitude" ;
    grid_yt:units = "degrees_N" ;
    grid_yt:axis = "Y" ;
    grid_yt:domain_decomposition = 1, 10, 6, 10 ;
  double time(time) ;
    time:long_name = "time" ;
    time:units = "days since 0001-01-01 00:00:00" ;
    time:axis = "T" ;
    time:calendar_type = "NOLEAP" ;
    time:calendar = "noleap" ;
  float var(grid_yt, grid_xt) ;
    var:long_name = "Decomposed variable" ;
    var:units = "m" ;
    var:missing_value = 1.e+20f ;
    var:_FillValue = 1.e+20f ;
    var:dummy_attribute = "just a dummy attribute" ;
// global attributed:
  :filename = "decomp_ref.nc.0003" ;
  :NumFilesInSet = 4 ;
  :dummy_global_att = "a global dummy attribute" ;
data:
  grid_xt = 5.0, 6.0, 7.0, 8.0, 9.0 ;
  grid_yt = 5.0, 6.0, 7.0, 8.0, 9.0 ;
  time = 0 ;
  var =
    55, 56, 57, 58, 59,
    65, 66, 67, 68, 69,
    75, 76, 77, 78, 79,
    85, 86, 87, 88, 89,
    95, 96, 97, 98, 99 ;
}
EOF

ncgen -o decomp.nc << EOF || framework_failure_ "Failed to create reference file"
netcdf decomp {
dimensions:
	grid_xt = 10 ;
	grid_yt = 10 ;
	time = UNLIMITED ; // (1 currently)
variables:
	double grid_xt(grid_xt) ;
		grid_xt:long_name = "T-cell longitude" ;
		grid_xt:units = "degrees_E" ;
		grid_xt:axis = "X" ;
	double grid_yt(grid_yt) ;
		grid_yt:long_name = "T-cell latitude" ;
		grid_yt:units = "degrees_N" ;
		grid_yt:axis = "Y" ;
	double time(time) ;
		time:long_name = "time" ;
		time:units = "days since 0001-01-01 00:00:00" ;
		time:axis = "T" ;
		time:calendar_type = "NOLEAP" ;
		time:calendar = "noleap" ;
	float var(grid_yt, grid_xt) ;
		var:long_name = "Decomposed variable" ;
		var:units = "m" ;
		var:missing_value = 1.e+20f ;
		var:_FillValue = 1.e+20f ;
		var:dummy_attribute = "just a dummy attribute" ;

// global attributes:
		:filename = "decomp.nc" ;
		:dummy_global_att = "a global dummy attribute" ;
data:

 grid_xt = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ;

 grid_yt = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ;

 time = 0 ;

 var =
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
  20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
  30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
  40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
  50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
  60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
  70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
  80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
  90, 91, 92, 93, 94, 95, 96, 97, 98, 99 ;
}
EOF

# run mppnccombine to generate decomp.nc, not
# listing other input files
mppncscatter -i 2 -j 2 -x 10 -y 10 decomp.nc || fail_ "mppncscatter failed"
# verify that mppncscatter generated all the files
test $(ls -1 decomp.nc.* | wc -l) -eq 4 \
  || fail_ mppncscatter craeated the wrong number of files.  Expected 6, got $(ls -1 decomp.nc.* | wc -l)
# Check that all created files are valid NetCDF files
for f in $(ls -1 decomp.nc.*)
do
  ncdump $f > /dev/null 2>&1 \
    || fail_ file $f is not a valid NetCDF file
done
# verify that the output matches the reference
for f in $(ls -1 decomp.nc.*)
do
  "${top_srcdir=..}/tests"/nc_cmp -dm decomp_ref.${f#*.} $f \
    || fail_ "mppncscatter output does not match the reference\n$output"
done
